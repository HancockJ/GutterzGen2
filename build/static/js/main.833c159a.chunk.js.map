{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","INFURA_ID","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","walletlink","WalletLink","appName","chainId","appLogoUrl","darkMode","connectSuccess","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","ReactGA","initialize","pageview","window","location","pathname","search","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","href","className","src","alt","borderRadius","width","height","textAlign","fontSize","marginBottom","lineHeight","fontFamily","color","target","length","substring","Number","textTransform","paddingTop","paddingBottom","paddingLeft","paddingRight","onClick","e","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","reload","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","eth","getAccounts","message","includes","String","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.833c159a.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","/*\n\nCoinbase Wallet integration/fallback with HashLips minting dapp by Karmelo\n\nThe below code defaults to MetaMask and then if MetaMask isn't found, tries Wallet Connect rather than just dying and not \nproviding the user with any feedback, allowing the user to select Coinbase Wallet to mint. Confirmed to be working on both \nmobile and desktop, including Safari. If anyone has any other updates to this please let me know via @KarmeleonsNFT on twitter.\n\nFirst you need to install the walletconnect dependencies via npm:\n\nnpm install walletconnect --save\nnpm install web3-provider --save\nnpm install web3modal --save \nnpm install walletlink --save \n\nThen replace the entirety of your blockchainActions.js in src/redux/blockchain if you've used the boilerplate code from the \nrepo with the below code, ensuring you replace 'My App Name' with your app's name:\n*/\n\n\n// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\n//import ReactGA from 'react-ga';\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\n// wallet connect for coinbase wallet\n// adapted from https://github.com/HashLips/hashlips_nft_minting_dapp/issues/69\nconst INFURA_ID = \"f04850f591404d189d50274dbf1e5c65\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        1: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\" // ETH\n      },\n    },\n  },\n  walletlink: {\n    package: WalletLink, // Required\n    options: {\n      appName: \"Karmeleons NFT\", // Required\n      infuraId: INFURA_ID, // Required unless you provide a JSON RPC url; see `rpc` below\n      rpc: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\", // Optional if `infuraId` is provided; otherwise it's required\n      chainId: 1, // Optional. It defaults to 1 if not provided\n      appLogoUrl: \"https://mint.karmeleonsnft.com/setup/images/logo512.png\", // Optional. Application logo image URL. favicon is used if unspecified\n      darkMode: false, // Optional. Use dark theme, defaults to false\n    },\n  },\n};\n// end wallet connect options\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/setup/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/setup/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      //dispatch(connectFailed(\"Please install MetaMask to mint your NFT.\"));\n\n      // wallet connect for coinbase wallet\n      // adapted from https://github.com/HashLips/hashlips_nft_minting_dapp/issues/69\n      try {\n        localStorage.removeItem(\"walletconnect\");\n        localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n        const web3Modal = new Web3Modal({\n          network: \"mainnet\", // optional\n          cacheProvider: false, // optional\n          providerOptions, // required\n        });\n        const provider = await web3Modal.connect();\n        const web3 = new Web3(provider);\n        //console.log(\"web\", web3);\n  \n        Web3EthContract.setProvider(provider);\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await provider.request({\n          method: \"net_version\",\n        });\n        //console.log(\"networkId\", networkId);\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          provider.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          provider.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n          \n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        console.log(\"error\", err, \" message\", err.message);\n        if (\n          typeof err !== \"undefined\" &&\n          typeof err.message !== \"undefined\" &&\n          err.message.includes(\"User Rejected\")\n        ) {\n          dispatch(connectFailed(\"User rejected the request\"));\n        } else if (\n          (typeof err === \"string\" || err instanceof String) &&\n          err.includes(\"Modal closed by user\")\n        ) {\n          dispatch(connectFailed(\"Modal closed by user\"));\n        } else {\n          dispatch(connectFailed(\"Something went wrong.\"));\n        }\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport ReactGA from 'react-ga';\nReactGA.initialize('G-9BDLBFDQN8');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding-top: 24px;\n  padding-bottom: 16px;\n  padding-right: 30px;\n  padding-left: 30px;\n  border-radius: 6px;\n  border: none;\n  font-size: 32px;\n  background-color: var(--secondary);\n  /*font-weight: bold;*/\n  color: var(--secondary-text);\n  /*width: 100px;*/\n  cursor: pointer;\n  /*box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);*/\n  :active {\n    /*box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;*/\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: #222;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: \"PxGrotesk Bold\";\n  /*box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);*/\n  :active {\n    /*box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;*/\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 320px;\n  @media (min-width: 767px) {\n    width: 520px;\n  }\n\n`;\n\nexport const StyledImg = styled.img`\n  /*box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);*/\n  //border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  border: 8px solid #333;\n  display: none;\n  @media (min-width: 900px) {\n    display: flex;\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    display: flex;\n    width: 300px;\n  }\n  \n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click mint to purchase your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Dope. Your ${CONFIG.NFT_NAME} is yours! View your wallet on Opensea.io for instant reveal.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 7) {\n      newMintAmount = 7;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/setup/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/setup/images/bg.png\" : null}\n      >\n        <a href=\"https://karmeleonsnft.com\">\n        <img className=\"logo\" src=\"/setup/images/logo.png\" alt=\"Karmeleons NFT\" />\n        </a>\n       \n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 0 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/setup/images/karmeleon-left.png\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container className=\"mint-window\"\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              // backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              //border: \"4px dashed var(--secondary)\",\n              //boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n          <StyledLogo style={{\n                width: \"90px\",\n                height: \"90px\"\n              }}\n              alt={\"logo\"} src={\"/setup/images/logo512.png\"} />\n          <s.SpacerSmall />\n            {blockchain.account === \"\" ||\n              blockchain.smartContract === null ? (\n                <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 26,\n                marginBottom: 8,\n                lineHeight: 1.2,\n                fontFamily: \"PxGrotesk Bold\",\n                color: \"var(--accent-text)\",\n              }}\n              >\n                Connect for mint status\n              </s.TextTitle>\n              ) : ( \n                <s.TextTitle\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: 50,\n                    fontFamily: \"PxGrotesk Bold\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                </s.TextTitle>\n              )}\n              {blockchain.account === \"\" || \n                blockchain.smartContract === null ? (\n                  \"\"\n                  ) : ( \n                  <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                    marginBottom: \"10px\"\n                  }}\n                  >\n                  <p>&hellip;have been minted</p>\n                  </s.TextDescription>\n              )}\n\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Karmeleons have sold out.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"#f1f1f1\", fontFamily: \"PxGrotesk Bold\", textTransform: \"uppercase\",\n                   borderRadius: \"100px\", backgroundColor: \"#999\", fontSize: \"18px\", \n                    paddingTop: \"5px\",\n                    paddingBottom: \"3px\",\n                    paddingLeft: \"16px\",\n                    paddingRight: \"16px\"\n                   }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  (Excluding gas fees)\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network to mint.\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"CONNECTING...\" : \"MINT\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/setup/images/karmeleon-right.png\"}\n              // style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"60%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}